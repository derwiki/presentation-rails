<!doctype html>
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %title Using git effectively | Adam Derewecki
    %meta{:content => "Adam Derewecki", :name => "author"}/
    %link{:href => "http://fonts.googleapis.com/css?family=Montserrat:400,700", :rel => "stylesheet", :type => "text/css"}/
    %link{:href => "reveal/css/reset.css", :rel => "stylesheet"}/
    %link{:href => "reveal/css/main.css", :rel => "stylesheet"}/
    %link{:href => "highlight/src/styles/solarized_dark.css", :rel => "stylesheet"}/
    %link{:href => "presentation.css", :rel => "stylesheet"}/
  %body#presentation
    .reveal
      .slides

        %section
          %h2
            Ruby on Rails: the good parts
          %h4
            .live
              Live:
              %a{ href: 'is.gd/derwiki_git' }
                is.gd/derwiki_rails
            .source
              Source:
              %a{ href: '//github.com/derwiki/presentation-git' }
                github.com/derwiki/presentation-rails
          %br
          %h5 presented by
          %h4 @derwiki
          %h4
          %h4 for AdRoll, May 5, 2015

        %section
          %h3
            What is Ruby?
          %ul
            %li.fragment
              A dynamic, object-oriented programming language developed in the
              mid-90's
            %li.fragment
              Designed for programmer productivity and fun
            %li.fragment
              %div{ style: 'font-size: 26px; font-style: italic;' }
                Often people, especially computer engineers, focus on the machines. They think, "By doing this, the machine will run fast. By doing this, the machine will run more effectively. By doing this, the machine will something something something." They are focusing on machines. But in fact we need to focus on humans, on how humans care about doing programming or operating the application of the machines. We are the masters. They are the slaves.
              %div - Yukihiro Matsumoto, the creator of Ruby

        %section
          %h3 What is Rails?
          %ul
            %li.fragment
              Full-stack framework written in Ruby
            %li.fragment
              Shipped with OS X since 2007
            %li.fragment
              Emphasizes the use of well-known software engineering patterns
              and paradigms:
            %li.fragment
              Convention over configuration
            %li.fragment
              Don't repeat yourself (DRY)
            %li.fragment
              Active record pattern
            %li.fragment
              Model–View–Controller (MVC)
            %li.fragment
              Representational state transfer (REST)
            %li.fragment
              \... and more

        %section
          %h3 Why Rails?
          %ul
            %li.fragment
              Like Ruby, optimized for developer productivity
            %li.fragment
              Which is why I
              %i roll my eyes
              when people complain that it's slow
            %li.fragment
              CPU and memory is getting faster and cheaper,
              developers are already
              %i much
              more expensive and getting more expensive

        %section
          %h3 Optimized... how?
          %ul
            %li.fragment
              Convention over configuration: once you learn "the Rails way",
              you know where everything is supposed to be and what the file
              is named -- cross project
            %li.fragment
              Robust CLI tool for rote development chores
            %li.fragment
              Once you learn this tool and the time savings it buys you,
              you start thinking how you can translate your feature
            %li.fragment
              ActiveRecord is a mature feature that provides a predictable and
              terse way to query the database
            %li.fragment
              Incorporates many best practices out-of-the-box

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
              At RailsConf 2015, DHH (Rails creator) likened Rails to a
              survival kit for the Zombie apocolypse
            %li.fragment
              A little bit of everything, B/B+ quality -- use what you need
            %li.fragment

        %section
          %h3.ms rails new PerfMon
          %ul
            %li.fragment
              Helper that sets up a new project skeleton
          .fragment.two-column
            .ms Gemfile
            .ms Gemfile.lock
            .ms README.rdoc
            .ms config.ru
            .ms Rakefile
            .ms app/
            .ms bin/
            .ms config/
            .ms db/
            .ms lib/
            .ms log/
            .ms public/
            .ms test/
            .ms tmp/
            .ms vendor/

        %section
          %h3 Gemfile
          .fragment
            .ms source 'https://rubygems.org'
            .ms gem 'rails', '4.2.0'
            .ms gem 'sqlite3'
            .ms gem 'sass-rails', '~> 5.0'
            .ms gem 'uglifier', '>= 1.3.0'
            .ms gem 'coffee-rails', '~> 4.1.0'
            .ms gem 'jquery-rails'
            .ms gem 'turbolinks'
            .ms gem 'jbuilder', '~> 2.0'
            .ms group :development, :test do
            .ms &nbsp; &nbsp; gem 'byebug'
            .ms &nbsp; &nbsp; gem 'web-console', '~> 2.0'
            .ms &nbsp; &nbsp; gem 'spring'
            .ms end

        %section
          %h3.ms app/
          .fragment
            .ms app/models/
            .ms app/controllers/application_controller.rb
            .ms app/views/layouts/application.html.erb
            .ms app/helpers/application_helper.rb
            .ms app/mailers/
            .ms app/assets/javascripts/application.js
            .ms app/assets/stylesheets/application.css
            .ms app/assets/images/
            .ms app/controllers/concerns/
            .ms app/models/concerns/

        %section
          %h3
            %span.ms bin/
            and
            %span.ms config/
          .fragment
            .ms bin/bundle
            .ms bin/rails
            .ms bin/rake
            .ms bin/setup
            .ms config/application.rb
            .ms config/routes.rb
            .ms config/database.yml
            .ms config/environment.rb
            .ms config/environments/development.rb
            .ms config/environments/production.rb
            .ms config/environments/test.rb
            .ms config/locales/en.yml

        %section
          %h3.ms config/initializers/
          .fragment
            .ms config/initializers/assets.rb
            .ms config/initializers/backtrace_silencers.rb
            .ms config/initializers/cookies_serializer.rb
            .ms config/initializers/filter_parameter_logging.rb
            .ms config/initializers/inflections.rb
            .ms config/initializers/mime_types.rb
            .ms config/initializers/session_store.rb
            .ms config/initializers/wrap_parameters.rb

        %section
          %h3
            %span.ms db/,
            %span.ms lib/,
            %span.ms log/,
            %span.ms public/,
            %span.ms test/,
            %span.ms tmp/,
            and
            %span.ms vendor/
          .fragment.two-column
            .ms db/seeds.rb
            .ms lib/tasks/
            .ms lib/assets/
            .ms log/
            .ms public/{404,422,500}.html
            .ms public/favicon.ico
            .ms public/robots.txt
            .ms test/fixtures/
            .ms test/controllers/
            .ms test/mailers/
            .ms test/models/
            .ms test/helpers/
            .ms test/integration/
            .ms test/test_helper.rb
            .ms tmp/cache/
            .ms tmp/cache/assets/
            .ms vendor/assets/javascripts/
            .ms vendor/assets/stylesheets/

        %section
          %h3 $ rails g scaffold Snapshot
          .fragment
            .ms.b $ rails g scaffold Snapshot requests:integer visual_complete:integer
            .ms db/migrate/20150504043737_create_snapshots.rb
            .ms app/models/snapshot.rb
            .ms test/models/snapshot_test.rb
            .ms app/controllers/snapshots_controller.rb
            .ms app/views/snapshots/
            .ms &nbsp; &nbsp; {index edit show new _form}.html.haml
            .ms test/controllers/snapshots_controller_test.rb
            .ms app/helpers/snapshots_helper.rb
            .ms app/assets/javascripts/snapshots.coffee
            .ms app/assets/stylesheets/snapshots.scss
            .ms app/assets/stylesheets/scaffolds.scss

        %section
          %h3 Update the database
          .fragment
            .ms.b $ rake db:migrate
            .ms == 20150504043737 CreateSnapshots: migrating ==================================
            .ms -- create_table(:snapshots)
            .ms &nbsp; -&gt; 0.0014s
            .ms == 20150504043737 CreateSnapshots: migrated (0.0015s) =========================

        %section
          %h3 Verifying the migration
          .fragment
            .ms.b $ rails c
            .ms Loading development environment (Rails 4.2.0)
            .ms 2.2.0 :001 &gt; Snapshot.all
            .ms &nbsp; Snapshot Load (1.6ms)  SELECT "snapshots".* FROM "snapshots"
            .ms =&gt; &lt;ActiveRecord::Relation []&gt;
            .ms 2.2.0 :002 &gt; Snapshot
            .ms &nbsp; =&gt; Snapshot(id: integer, requests: integer, visual_complete: integer, created_at: datetime, updated_at: datetime)


        %section
          %h3 Controller
          .fragment.sm
            .ms class SnapshotsController &lt; ApplicationController
            .ms   before_action :set_snapshot, only: %i[show edit update destroy]
            %br
            .ms   def index # GET /snapshots
            .ms     @snapshots = Snapshot.all
            .ms   end
            %br
            .ms   def show # GET /snapshots/1
            .ms   end
            %br
            .ms   def new # GET /snapshots/new
            .ms     @snapshot = Snapshot.new
            .ms   end
            %br
            .ms   def edit # GET /snapshots/1/edit
            .ms   end

        %section
          %h3 Controller
          .fragment.sm
            .ms def create # POST /snapshots
            .ms &nbsp;  @snapshot = Snapshot.new(snapshot_params)
            %br
            .ms &nbsp; respond_to do |format|
            .ms &nbsp; &nbsp; if @snapshot.save
            .ms &nbsp; &nbsp; &nbsp; format.html { redirect_to @snapshot, notice: 'Snapshot was successfully created.' }
            .ms &nbsp; &nbsp; &nbsp; format.json { render :show, status: :created, location: @snapshot }
            .ms &nbsp; &nbsp; else
            .ms &nbsp; &nbsp; &nbsp; format.html { render :new }
            .ms &nbsp; &nbsp; &nbsp; format.json { render json: @snapshot.errors }
            .ms &nbsp; &nbsp; end
            .ms &nbsp; end
            .ms end

        %section
          %h3 Controller
          .fragment.sm
            .ms def update # PATCH/PUT /snapshots/1
            .ms &nbsp; respond_to do |format|
            .ms &nbsp; &nbsp; if @snapshot.update(snapshot_params)
            .ms &nbsp; &nbsp; &nbsp; format.html { redirect_to @snapshot, notice: 'Snapshot was successfully updated.' }
            .ms &nbsp; &nbsp; &nbsp; format.json { render :show, status: :ok, location: @snapshot }
            .ms &nbsp; &nbsp; else
            .ms &nbsp; &nbsp; &nbsp; format.html { render :edit }
            .ms &nbsp; &nbsp; &nbsp; format.json { render json: @snapshot.errors, status: :unprocessable_entity }
            .ms &nbsp; &nbsp; end
            .ms &nbsp; end
            .ms end

        %section
          %h3 Controller
          .fragment.sm
            .ms &nbsp; def destroy # DELETE /snapshots/1
            .ms &nbsp; &nbsp; @snapshot.destroy
            .ms &nbsp; &nbsp; respond_to do |format|
            .ms &nbsp; &nbsp; &nbsp; format.html { redirect_to snapshots_url, notice: 'Snapshot was successfully destroyed.' }
            .ms &nbsp; &nbsp; &nbsp; format.json { head :no_content }
            .ms &nbsp; &nbsp; end
            .ms &nbsp; end

        %section
          %h3 Controller
          .fragment.sm
            .ms &nbsp; private
            .ms &nbsp; &nbsp; # Use callbacks to share common setup or constraints between actions.
            .ms &nbsp; &nbsp; def set_snapshot
            .ms &nbsp; &nbsp; &nbsp; @snapshot = Snapshot.find(params[:id])
            .ms &nbsp; &nbsp; end
            %br
            .ms &nbsp; &nbsp; # Never trust parameters from the scary internet, only allow the white list through.
            .ms &nbsp; &nbsp; def snapshot_params
            .ms &nbsp; &nbsp; &nbsp; params.require(:snapshot).permit(:requests, :visual_complete)
            .ms &nbsp; &nbsp; end

        %section
          %h3 Start the server
          .fragment
            .ms.b $ rails s -p 3003
            .ms =&gt; Booting WEBrick
            .ms =&gt; Rails 4.2.0 application starting in development on http://localhost:3003
            .ms =&gt; Run `rails server -h` for more startup options
            .ms =&gt; Ctrl-C to shutdown server
            .ms [2015-05-03 21:44:39] INFO  WEBrick 1.3.1
            .ms [2015-05-03 21:44:39] INFO  ruby 2.2.0 (2014-12-25) [x86_64-darwin13]
            .ms [2015-05-03 21:44:39] INFO  WEBrick::HTTPServer#start: pid=13475 port=3003

        %section
          %h3
            Request
            %span.ms /snapshots
          .fragment
            .ms Started GET "/snapshots" for ::1 at 2015-05-03 21:47:24 -0700
            .ms Processing by SnapshotsController#index as HTML
            .ms   Snapshot Load (0.1ms)  SELECT "snapshots".* FROM "snapshots"
            .ms   Rendered snapshots/index.html.haml within layouts/application (3.7ms)
            .ms Completed 200 OK in 1659ms (Views: 1655.5ms | ActiveRecord: 0.2ms)

        %section
          %h3.ms /snapshots (index)
          %img.stretch{ src: 'assets/snapshots-index.jpg' }

        %section
          %h3.ms /snapshots (new)
          %img.stretch{ src: 'assets/snapshots-new.jpg' }

        %section
          %h3.ms /snapshots (show)
          %img.stretch{ src: 'assets/snapshots-show.jpg' }

        %section
          %h3.ms /snapshots (index)
          %img.stretch{ src: 'assets/snapshots-index-2.jpg' }

        %section
          %h3 Cron job
          .fragment
            .ms.b $ rails g task web_page_test run
            .ms &nbsp; &nbsp; &nbsp;create &nbsp;lib/tasks/web_page_test.rake
            .ms.b $ cat lib/tasks/web_page_test.rake
            .ms namespace :web_page_test do
            .ms &nbsp; desc "TODO"
            .ms &nbsp; task run: :environment do
            .ms &nbsp; end
            .ms end

        %section
          %h3 Rake task
          .fragment
            .ms require 'web_page_test'
            %br
            .ms namespace :web_page_test do
            .ms &nbsp; desc "Run performance test"
            .ms &nbsp; task run: :environment do
            .ms &nbsp; &nbsp; requests, visual_complete =
            .ms &nbsp; &nbsp; &nbsp; WebPageTest.test('http://example.com')
            .ms &nbsp; &nbsp; PerfMon.create! requests: requests,
            .ms &nbsp; &nbsp; &nbsp; visual_complete: visual_complete
            .ms &nbsp; end
            .ms end

        %section
          %h3 Heroku
          .fragment.sm
            .ms.b $ heroku create perf-mon-example
            .ms Creating perf-mon-example... done, stack is cedar-14
            .ms https://perf-mon-example.herokuapp.com/ | https://git.heroku.com/perf-mon-example.git
            .ms Git remote heroku added
            .ms.b $ git remote -v
            .ms heroku  https://git.heroku.com/perf-mon-example.git (fetch)
            .ms heroku  https://git.heroku.com/perf-mon-example.git (push)

        %section
          %h3 Pushing to Heroku
          .fragment.sm
            .ms $ git push heroku master
            .ms Counting objects: 90, done.
            .ms Delta compression using up to 4 threads.
            .ms Compressing objects: 100% (82/82), done.
            .ms Writing objects: 100% (90/90), 20.87 KiB | 0 bytes/s, done.
            .ms Total 90 (delta 5), reused 0 (delta 0)
            .ms remote: Compressing source files... done.
            .ms remote: Building source:
            .ms remote:
            .ms remote: -----> Ruby app detected
            .ms remote: -----> Compiling Ruby/Rails
            .ms remote: -----> Using Ruby version: ruby-2.0.0
            .ms remote: -----> Installing dependencies using 1.7.12

        %section
          %h3 Pushing to Heroku
          .fragment.sm
            .ms remote:        Running: bundle install --without development:test
            .ms remote:        Installing rails 4.2.0
            .ms remote:        Your bundle is complete!
            .ms remote:        Bundle completed (29.25s)
            .ms remote:        Cleaning up the bundler cache.
            .ms remote: -----> Preparing app for Rails asset pipeline
            .ms remote:        Running: rake assets:precompile
            .ms remote:        Writing /tmp/build_62ee/public/assets/application-b598aa7.js
            .ms remote:        Writing /tmp/build_62ee/public/assets/application-0723cb9.css
            .ms remote:        Asset precompilation completed (7.66s)
            .ms remote:        Cleaning assets
            .ms remote:        Running: rake assets:clean

        %section
          %h3 Pushing to Heroku
          .fragment.sm
            .ms remote: -----> Discovering process types
            .ms remote:        Procfile declares types -> (none)
            .ms remote:        Default types for Ruby  -> console, rake, web, worker
            .ms remote:
            .ms remote: -----> Compressing... done, 28.8MB
            .ms remote: -----> Launching... done, v6
            .ms remote:        https://perf-mon-example.herokuapp.com/ deployed to Heroku
            .ms remote:
            .ms remote: Verifying deploy... done.
            .ms To https://git.heroku.com/perf-mon-example.git
            .ms  * [new branch]      master -> master

        %section
          %h3 Why Heroku
          .fragment.sm.four-column
            .ms airportyogamats
            .ms anotherphotoproject
            .ms apartmentlist-referral-map
            .ms badpoop
            .ms boozysmoothies
            .ms buildingawebsiteonheroku
            .ms cameralends
            .ms cameralends-blog
            .ms cameralends-discourse
            .ms cameralends-new
            .ms cameralends-staging
            .ms classesnearme-prod
            .ms cookingproject
            .ms cupidsarrow
            .ms dailysitesnap
            .ms dereweckiphotography
            .ms derwiki-mockr
            .ms dss-screenshotter
            .ms enigmatic-hollows-7416
            .ms etsytools
            .ms facebooklite
            .ms fathersunion
            .ms formr
            .ms friendgrid
            .ms friendgridowski
            .ms goforcrew-beta
            .ms henrythedog
            .ms isduncansicktoday
            .ms jaspereng
            .ms johnhenryrails
            .ms just10cards
            .ms middleschoolscience
            .ms mockr-demo
            .ms moonshineonline
            .ms mynextmuni
            .ms openscience
            .ms openscience-legacy
            .ms openscience-staging
            .ms paidcodereview
            .ms paidcodereview-staging
            .ms perf-mon-example
            .ms putaframeonit
            .ms rails4payment
            .ms rails4payment-staging
            .ms rails4wizard
            .ms rails4wizard-staging
            .ms redface
            .ms retrotrakker
            .ms rollify-experimental
            .ms sample-project-123
            .ms seoranktracker
            .ms showoffyourmasterpiece
            .ms singlyhackathon
            .ms sitegazer
            .ms snowhio
            .ms subtwittle
            .ms verticalbrands-stars
            .ms web-page-test-adroll
            .ms web-page-test-cameralends
            .ms weblapse
            .ms whenissunset
            .ms whentogo
            .ms yetanotherproject

        %section
          %h3 Setting up scheduler
          .fragment.sm
            .ms.b $ heroku addons:add scheduler
            .ms Adding scheduler on perf-mon-example... done, v6 (free)
            .ms This add-on consumes dyno hours, which could impact your monthly bill. To learn more:
            .ms http://devcenter.heroku.com/addons_with_dyno_hour_usage
            %br
            .ms To manage scheduled jobs run:
            .ms heroku addons:open scheduler
            .ms Use `heroku addons:docs scheduler` to view documentation.
            %br
            .ms.b $ heroku addons:open scheduler
            .ms Opening scheduler:standard for perf-mon-example... done

        %section
          %h3.ms Adding a new task
          %img.stretch{ src: 'assets/heroku-scheduler.jpg' }

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h3 Survival Kit
          %ul
            %li.fragment
            %li.fragment
            %li.fragment

        %section
          %h2
            Using
            %span.ms git
            effectively
          %h4
            .live
              Live:
              %a{ href: 'is.gd/derwiki_git' }
                is.gd/derwiki_git
            .source
              Source:
              %a{ href: '//github.com/derwiki/presentation-git' }
                github.com/derwiki/presentation-git
          %br
          %h5 presented by
          %h4 @derwiki
          %h4
          %h4 for AdRoll, March 31, 2015

      /
        required for correct operation of reveal.js,
        even if we don't want controls
      %aside.controls
        %a.left{:href => "#"} &#x25c4;
        %a.right{:href => "#"} &#x25ba;
        %a.up{:href => "#"} &#x25b2;
        %a.down{:href => "#"} &#x25bc;

    %script{:src => "reveal/js/reveal.min.js"}
    %script{:src => "highlight/build/highlight.pack.js"}
    :javascript
      Reveal.initialize({
        controls: false,
        progress: false,
        history: true,
        mouseWheel: false,
        rollingLinks: false,
      });
      hljs.initHighlightingOnLoad();
